//WSTĘPNA KONFIGURACJA/ FORMATOWANIE/ URUCHAMIANIE ------------------- start

a) Odpalanie na iOSie
[V] Czy mogę uruchomić projekt utworzony przez react-native init przez expo? - NIE
(Po to żeby zobaczyć jak komponenty działają na symulatorze iOS'a)
[V] Uruchamianie na iOS - Expo jest raczej słabe bo nie mozna zalaczac modulow natywnych (czy napewno? patrz b) ) 
i wspiera tylko Androida 4.4 w górę (chociaż to pewnie przejdzie)
 jak najlepiej postawić sobie wirtualkę z Mac OS na Windowsie? (Virtual box?) 
 Zadziała z nią? Dużo będzie roboty przy przerzucaniu projektu? Jest sens to robić?
Jak w ogóle będziemy później podchodzić do testowania na iOSie?

BONUS: jak ma się do tego u góry opcja > advanced (experimental) "Build your appp with Javascript with Expo APIs and custom native modules",
którą mam przy inicjalizowaniu projektu przez expo init?
-DOSTANIEMY MACA I BEDZIE 

b) Konfiguracja linta
[] eslint - jak skonfigurować? (eslint --init i trudne pytania, które zadaje) :            

    PS C:\Users\PC_21\Desktop\rawProject\WonderfulProject> eslint --init
    ? How would you like to use ESLint? To check syntax, find problems, and enforce code style   //} Czy tylko check syntax, 
                                                                                                     czy check syntax and find problems 
                                                                                                     czy check syntax find problems and enforce code style ?
    ? What type of modules does your project use? JavaScript modules (import/export)
    ? Which framework does your project use? React
    ? Where does your code run? (Press <space> to select, <a> to toggle all, <i> to invert selection)Browser
    ? How would you like to define a style for your project? Use a popular style guide
    ? Which style guide do you want to follow? Google (https://github.com/google/eslint-config-google)     //} Jaki style Guide?
    ? What format do you want your config file to be in? JSON
    } npm run lint:fix - próbuje automatycznie naprawiać błędy linta - będziemy używać takich rzeczy?
    } lint on save - w Android Studio takiego czegoś nie mieliśmy -  będziemy używać takich rzeczy?
    } konfiguracja reguł linta (rules w .eslintrc.json)

c) Prettier a lint
[] autoformatowanie - Prettier/ lint  - jak ma się "zwyczajny" lint do Prettier'a i jak je pogodzić/ czego używać?
  } Prettier używa prettier-eslint
  "Formats your JavaScript using prettier followed by eslint --fix"
...
https://github.com/prettier/prettier-eslint
"The fix feature of eslint is pretty great and can auto-format/fix much of your code according to your ESLint config.
 prettier is a more powerful automatic formatter." 
  } jak to wszystko skonfigurować?

d) Odpalanie na Androidzie i Githooki
[] odpalanie na androidzie - czy sugerowane odpalanie cleana przed kazdym buildem jest takie super?
  "android": "cd android && ./gradlew clean && cd .. && react-native run-android",  w package.json
[] Husky i prepush lint https://www.reactnative.guide/6-conventions-and-code-style/6.2-git-pre-hooks.html
- fajne czy niefajne?
  } można zrobić np. tak: git push -u origin master --no-verify -
    prepush lint może byc włączony ale można pushować z tą opcją w razie potrzeby

e) Zmienne środowiskowe/ konfiguracja dev i prod
[] environment variables - zawartość env.config.js jest podmieniana na to co znajduje się w 
dev.env.js lub production.env.js - co może być w env.config.js i dev i production w praktyce? 
  } Jak dev i production który jest tutaj ma się do późniejszych flavor'ów androidowych?

//WSTĘPNA KONFIGURACJA/ FORMATOWANIE/ URUCHAMIANIE ------------------- end

//TESTY ------------------- start
[] Czy piszecie i jak bardzo poważnie ?
[] AUTOIMPORT -> przykład z counter.utils.js -> NARAWDĘ TAKIE SŁABE TO MUSI BYĆ? 
jak zaimportować funkcję "z automatu"?
[] jak skończyć test w counter.util.tests.js?
[V] Snaphosty - niby fajna rzeczy - czy będziemy używać? // W react-starter było
} używając razem z nimi husky można by zablokować możliwość pushowania componentów których świadomie nie chcieliśmy zmieniać -> ale 
czy to jest ok?

"Consider this scenario: you worked on a component, generated a snap and pushed it. 
Later, another dev named John made some changes in the component. 
Now the test of the snap will fail since the snap still contains the code which you wrote.
John will just need to update the snapshot to make the test pass. All that is needed to update the test case is one command: 
jest --updateSnapshot and he is done."
!}//TODO 
  We recommend creating an npm script for updating snaps. 
  As you can see in the package.json of our boilerplate, it contains a command called
  "test:update". This command goes through all the test cases and will update the snap whenever it is required.

[] Jak poprawnie zainstalowac enzyme? 
} konfiguracja enzyme w package json

"jest": {
  ...,
   "setupTestFrameworkScriptFile": "./node_modules/jest-enzyme/lib/index.js",
    "setupFiles": [
      "enzyme-react-16-adapter-setup"
    ]
}
Błąd:

Option "setupTestFrameworkScriptFile" was replaced by configuration "setupFilesAfterEnv", which supports multiple paths.
więc zmieniłem:

   "setupFilesAfterEnv": [
      "./node_modules/jest-enzyme/lib/index.js"
    ],

i mam błąd  Cannot find module 'react-dom' from 'ReactSixteenAdapter.js'
i muszę zainstalować react-dom - 
niby zainstalowałem , ale coś nie chciało działać itd
[] Biblioteki dla czystego reacta a dla react-native - ile tak procentowo bibliotek z reacta da się użyć w react native?
Robi się tak?
[] mockowanie modułów Node.js - można manualnie można automatycznie - czy mockuje się je w prawidłowych testach?
//TESTY ------------------- end

//Stylowanie ------------------- start
[] czy takie podejście do stylowania jest ok?:
  1. plik z globalnymi stałymi definiującymi np. główne kolory czy dostępne rozmiary czcionek // (theme.style.js)
  2. globalny plik z ogólnymi stylami definiujący np. cechy nagłówków, tekstu na buttonach (largeButtonText,largeHeaderText,  mediumHeaderText) //(styles.js)
  3. każdy komponent ma swój własny plik ze stylem //(np. Home.component.style.js) 
  4. plik ze stylem danego komponentu używa sobie globalnych stałych z theme.style.js
  5. common styles - jeśli w danym stylu należącym do konkretnego komponentu widzę np. powtarzający się kod
  - mogę wyodrębniać wspólne style, importować je do mojego konkretnego stylu dla danego komponentu
  i lekko modyfikować/ napisywać ten importowany styl //(common.style.js i Home.component.style.js)
  6. Style dla komponentu możemy robić osobno na iOS'a i Androida

//Stylowanie ------------------- end

//Nawigowanie po kodzie---
//[] ???!!!Debugowanie!!!???
//[] cofanie do ostatnich plików - czy jest możliwe?
//[] przesuwanie danej linijki/funkcji do góry/dołu za pomocą klawiatury (ctrl+shift+ strzałki w Androidzie)
//[] inne skróty które warto znać umiec potrafić?
//-------------------------

//Do odpowiedzenia sobie samemu (?)
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
[] Co to jest tak w sumie yarn poza tym że uruchamia :d?
[] Co to jest tak w sumie babel? (tak wiem że było!)
[V] Co to jest tak w sumie Jest?
[] Ogarnąć sample Daniela i porównać z tym co mam tutaj w projekcie


//////////////PART 2///////////////////////////
[] Hot reloading, live reloading - poczytać wiecej jak to działa, ale fajna rzecz
//Geolokalizacja 
https://stackoverflow.com/questions/24038315/how-to-get-location-from-different-sources-in-ios
[ ] Fused location na iOS jest by default?
On iOS you need not worry about location provider. Based on the accuracy you are setting,
 iOS framework will itself take decision and will push the location. You can not specify location provider in iOS.
 [+-] Androidowe permissiony i requestowanie o nie, dialogi itp -jak się do tego wszystkiego mają?
 [] przejście na typescript
 [+-] debugowanie chrome i breakpointy - 
 [] restowe api
 [] notyfikacje
 [] jak wyśrodkować tekst w buttonie?
 [] przywracanie apy - co zrobić zeby pozostawala mi w nawigacji na wczesniejszym ekranie
//--------

Custom views
------------
[V] Przekazywanie klikniecia do komponentu wyzej
------------

